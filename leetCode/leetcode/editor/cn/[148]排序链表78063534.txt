
/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode fast = head;
        ListNode slow = head;
        ListNode slowPre = null;
        while (fast != null && fast.next != null) {
            fast = fast.next.next;
            slowPre = slow;
            slow = slow.next;

        }
        slowPre.next = null;
        return merge(sortList(head), sortList(slow));
    }

    ListNode merge(ListNode node1, ListNode node2) {
        ListNode current = new ListNode(0);
        ListNode result = current;
        while (node1 != null && node2 != null) {
            if (node1.val < node2.val) {
                current.next = node1;
                node1 = node1.next;
            } else {
                current.next = node2;
                node2 = node2.next;
            }
            current = current.next;
        }
        current.next = node1 == null ? node2 : node1;
        return result.next;
    }
}

//runtime:4 ms
//memory:41.7 MB
