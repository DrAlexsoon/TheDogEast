class Solution {
    public int lengthOfLongestSubstring(String s) {
        int length = 0;
        int left = 0;
        HashMap<Character, Integer> hashMap = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (hashMap.containsKey(s.charAt(i))) {
                left = Math.max(left, hashMap.get(s.charAt(i)) + 1);
            }
            hashMap.put(s.charAt(i), i);
            length = Math.max(length, i - left + 1);
        }
        return length;
    }
}

//runtime:10 ms
//memory:40.2 MB
