

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 * //
 * //     1
 * //   / \
 * //  2   5
 * // / \   \
 * //3   4   6
 */
class Solution {
    public void flatten(TreeNode root) {
        dfs(root);
    }

    TreeNode dfs(TreeNode root) {
        if (root != null) {
            TreeNode left = dfs(root.left);
            TreeNode right = dfs(root.right);
            TreeNode current = root;
            if (left != null) {
                root.right = left;
                while (current.right != null) {
                    current = current.right;
                }
                root.left = null;
            }
            if (right != null) {
                current.right = right;
            }
        }
        return root;
    }
}

//runtime:0 ms
//memory:39.5 MB
