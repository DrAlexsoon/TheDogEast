class Solution {
    //f(i,j) = k(i) == k(j) ? f(i+1,j-1)+2 :max(f(i+1,j),f(i,j-1));
    public int longestPalindromeSubseq(String s) {
        int dp[][] = new int[s.length()][s.length()];
        int maxLen = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            dp[i][i] = 1;
            for (int j = i + 1; j < s.length(); j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    dp[i][j] = dp[i + 1][j - 1] + 2;
                } else {
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);
                }
                maxLen = Math.max(maxLen, dp[i][j]);
            }
        }
        return dp[0][s.length() - 1];
    }


}

//runtime:51 ms
//memory:50 MB
