class Solution {
    //f(m,n) = f(m+1,n-1) && k(m) ==k(n)
    //f(i,j) = f(i+1,j-1)
    public String longestPalindrome(String s) {
        boolean[][] dp = new boolean[s.length()][s.length()];
        int start = 0;
        int length = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            for (int j = 0; j < s.length(); j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (j - i < 3) {
                        dp[i][j] = true;
                    } else {
                        dp[i][j] = i + 1 < s.length() ? dp[i + 1][j - 1] : false;
                    }
                }
                if (dp[i][j] && j - i + 1 > length) {
                    start = i;
                    length = j - i + 1;
                }
            }

        }
        return s.substring(start, start + length);
    }
}



//runtime:248 ms
//memory:42.9 MB
