class Solution {
    public int[][] merge(int[][] intervals) {
        if (intervals.length < 2) {
            return intervals;

        }
        LinkedList<int[]> linkedList = new LinkedList();
        Arrays.sort(intervals, Comparator.comparingInt(v -> v[0]));
        int start = intervals[0][0];
        int end = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i][0] > end) {
                linkedList.add(new int[]{start, end});
                start = intervals[i][0];
                end = intervals[i][1];
            } else {
                end = Math.max(intervals[i][1], end);
            }
        }
        linkedList.add(new int[]{start, end});
        return linkedList.toArray(new int[linkedList.size()][]);
    }
}

//runtime:10 ms
//memory:42.5 MB
