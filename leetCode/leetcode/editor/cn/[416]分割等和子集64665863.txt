class Solution {
    public boolean canPartition(int[] nums) {
        int count  =0;
        for(int i = 0;i<nums.length;i++){
            count += nums[i];
        }
        if((count & 1) != 0){
            return false;
        }
        int target = count/2;
        boolean[][] dp = new boolean[nums.length][target+1];
        if(nums[0] < target){
            dp[0][nums[0]] = true;
        }

        for(int i = 0;i< nums.length;i++){
            for(int j = 0; j <= target;j++){
                dp[i][j]=dp[i-1][j];
                if(nums[i] < j){
                    dp[i][j] = dp[i-1][j] || dp[i-1][j-nums[i]];
                }
            }
        }
        return dp[nums.length-1][target];
    }


}
//runtime:65 ms
//memory:40 MB
